// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// See the file LICENSE.goloxi which should have been included in the source distribution

// Automatically generated by LOXI from template const.go
// Do not modify

package openflow

// Identifiers from group macro_definitions
//go:generate stringer -type=macro_definitions
type macro_definitions uint
const  (
  OFP_MAX_TABLE_NAME_LEN macro_definitions = 32
  OFP_MAX_PORT_NAME_LEN macro_definitions = 16
  OFP_TCP_PORT macro_definitions = 6653
  OFP_SSL_PORT macro_definitions = 6653
  OFP_ETH_ALEN macro_definitions = 6
  OFP_DEFAULT_MISS_SEND_LEN macro_definitions = 128
  OFP_VLAN_NONE macro_definitions = 65535
  OFPFW_ICMP_TYPE macro_definitions = 64
  OFPFW_ICMP_CODE macro_definitions = 128
  OFP_DL_TYPE_ETH2_CUTOFF macro_definitions = 1536
  OFP_DL_TYPE_NOT_ETH_TYPE macro_definitions = 1535
  OFP_FLOW_PERMANENT macro_definitions = 0
  OFP_DEFAULT_PRIORITY macro_definitions = 32768
  DESC_STR_LEN macro_definitions = 256
  SERIAL_NUM_LEN macro_definitions = 32
  OFPQ_ALL macro_definitions = 4294967295
  OFPQ_MIN_RATE_UNCFG macro_definitions = 65535
)

// Identifiers from group of_bsn_pdu_slot_num
//go:generate stringer -type=of_bsn_pdu_slot_num
type of_bsn_pdu_slot_num uint8
const  (
  BSN_PDU_SLOT_NUM_ANY of_bsn_pdu_slot_num = 255
)

// Identifiers from group ofp_action_type
//go:generate stringer -type=ofp_action_type
type ofp_action_type uint16
const  (
  OFPAT_OUTPUT ofp_action_type = 0
  OFPAT_SET_VLAN_VID ofp_action_type = 1
  OFPAT_SET_VLAN_PCP ofp_action_type = 2
  OFPAT_STRIP_VLAN ofp_action_type = 3
  OFPAT_SET_DL_SRC ofp_action_type = 4
  OFPAT_SET_DL_DST ofp_action_type = 5
  OFPAT_SET_NW_SRC ofp_action_type = 6
  OFPAT_SET_NW_DST ofp_action_type = 7
  OFPAT_SET_NW_TOS ofp_action_type = 8
  OFPAT_SET_TP_SRC ofp_action_type = 9
  OFPAT_SET_TP_DST ofp_action_type = 10
  OFPAT_ENQUEUE ofp_action_type = 11
  OFPAT_EXPERIMENTER ofp_action_type = 65535
)

// Identifiers from group ofp_bad_action_code
//go:generate stringer -type=ofp_bad_action_code
type ofp_bad_action_code uint16
const  (
  OFPBAC_BAD_TYPE ofp_bad_action_code = 0
  OFPBAC_BAD_LEN ofp_bad_action_code = 1
  OFPBAC_BAD_EXPERIMENTER ofp_bad_action_code = 2
  OFPBAC_BAD_EXPERIMENTER_TYPE ofp_bad_action_code = 3
  OFPBAC_BAD_OUT_PORT ofp_bad_action_code = 4
  OFPBAC_BAD_ARGUMENT ofp_bad_action_code = 5
  OFPBAC_EPERM ofp_bad_action_code = 6
  OFPBAC_TOO_MANY ofp_bad_action_code = 7
  OFPBAC_BAD_QUEUE ofp_bad_action_code = 8
)

// Identifiers from group ofp_bad_request_code
//go:generate stringer -type=ofp_bad_request_code
type ofp_bad_request_code uint16
const  (
  OFPBRC_BAD_VERSION ofp_bad_request_code = 0
  OFPBRC_BAD_TYPE ofp_bad_request_code = 1
  OFPBRC_BAD_STAT ofp_bad_request_code = 2
  OFPBRC_BAD_EXPERIMENTER ofp_bad_request_code = 3
  OFPBRC_BAD_SUBTYPE ofp_bad_request_code = 4
  OFPBRC_EPERM ofp_bad_request_code = 5
  OFPBRC_BAD_LEN ofp_bad_request_code = 6
  OFPBRC_BUFFER_EMPTY ofp_bad_request_code = 7
  OFPBRC_BUFFER_UNKNOWN ofp_bad_request_code = 8
)

// Identifiers from group ofp_bsn_vport_l2gre_flags
//go:generate stringer -type=ofp_bsn_vport_l2gre_flags
type ofp_bsn_vport_l2gre_flags uint32
const  (
  OF_BSN_VPORT_L2GRE_LOCAL_MAC_IS_VALID ofp_bsn_vport_l2gre_flags = 1
  OF_BSN_VPORT_L2GRE_DSCP_ASSIGN ofp_bsn_vport_l2gre_flags = 2
  OF_BSN_VPORT_L2GRE_DSCP_COPY ofp_bsn_vport_l2gre_flags = 4
  OF_BSN_VPORT_L2GRE_LOOPBACK_IS_VALID ofp_bsn_vport_l2gre_flags = 8
  OF_BSN_VPORT_L2GRE_RATE_LIMIT_IS_VALID ofp_bsn_vport_l2gre_flags = 16
)

// Identifiers from group ofp_bsn_vport_q_in_q_untagged
//go:generate stringer -type=ofp_bsn_vport_q_in_q_untagged
type ofp_bsn_vport_q_in_q_untagged uint16
const  (
  OF_BSN_VPORT_Q_IN_Q_UNTAGGED ofp_bsn_vport_q_in_q_untagged = 65535
)

// Identifiers from group ofp_bsn_vport_status
//go:generate stringer -type=ofp_bsn_vport_status
type ofp_bsn_vport_status uint
const  (
  OF_BSN_VPORT_STATUS_OK ofp_bsn_vport_status = 0
  OF_BSN_VPORT_STATUS_FAILED ofp_bsn_vport_status = 1
)

// Identifiers from group ofp_capabilities
//go:generate stringer -type=ofp_capabilities
type ofp_capabilities uint32
const  (
  OFPC_FLOW_STATS ofp_capabilities = 1
  OFPC_TABLE_STATS ofp_capabilities = 2
  OFPC_PORT_STATS ofp_capabilities = 4
  OFPC_STP ofp_capabilities = 8
  OFPC_RESERVED ofp_capabilities = 16
  OFPC_IP_REASM ofp_capabilities = 32
  OFPC_QUEUE_STATS ofp_capabilities = 64
  OFPC_ARP_MATCH_IP ofp_capabilities = 128
)

// Identifiers from group ofp_config_flags
//go:generate stringer -type=ofp_config_flags
type ofp_config_flags uint16
const  (
  OFPC_FRAG_NORMAL ofp_config_flags = 0
  OFPC_FRAG_DROP ofp_config_flags = 1
  OFPC_FRAG_REASM ofp_config_flags = 2
  OFPC_FRAG_MASK ofp_config_flags = 3
)

// Identifiers from group ofp_error_type
//go:generate stringer -type=ofp_error_type
type ofp_error_type uint16
const  (
  OFPET_HELLO_FAILED ofp_error_type = 0
  OFPET_BAD_REQUEST ofp_error_type = 1
  OFPET_BAD_ACTION ofp_error_type = 2
  OFPET_FLOW_MOD_FAILED ofp_error_type = 3
  OFPET_PORT_MOD_FAILED ofp_error_type = 4
  OFPET_QUEUE_OP_FAILED ofp_error_type = 5
)

// Identifiers from group ofp_flow_mod_command
//go:generate stringer -type=ofp_flow_mod_command
type ofp_flow_mod_command uint16
const  (
  OFPFC_ADD ofp_flow_mod_command = 0
  OFPFC_MODIFY ofp_flow_mod_command = 1
  OFPFC_MODIFY_STRICT ofp_flow_mod_command = 2
  OFPFC_DELETE ofp_flow_mod_command = 3
  OFPFC_DELETE_STRICT ofp_flow_mod_command = 4
)

// Identifiers from group ofp_flow_mod_failed_code
//go:generate stringer -type=ofp_flow_mod_failed_code
type ofp_flow_mod_failed_code uint16
const  (
  OFPFMFC_ALL_TABLES_FULL ofp_flow_mod_failed_code = 0
  OFPFMFC_OVERLAP ofp_flow_mod_failed_code = 1
  OFPFMFC_EPERM ofp_flow_mod_failed_code = 2
  OFPFMFC_BAD_EMERG_TIMEOUT ofp_flow_mod_failed_code = 3
  OFPFMFC_BAD_COMMAND ofp_flow_mod_failed_code = 4
  OFPFMFC_UNSUPPORTED ofp_flow_mod_failed_code = 5
)

// Identifiers from group ofp_flow_mod_flags
//go:generate stringer -type=ofp_flow_mod_flags
type ofp_flow_mod_flags uint16
const  (
  OFPFF_SEND_FLOW_REM ofp_flow_mod_flags = 1
  OFPFF_CHECK_OVERLAP ofp_flow_mod_flags = 2
  OFPFF_EMERG ofp_flow_mod_flags = 4
)

// Identifiers from group ofp_flow_removed_reason
//go:generate stringer -type=ofp_flow_removed_reason
type ofp_flow_removed_reason uint8
const  (
  OFPRR_IDLE_TIMEOUT ofp_flow_removed_reason = 0
  OFPRR_HARD_TIMEOUT ofp_flow_removed_reason = 1
  OFPRR_DELETE ofp_flow_removed_reason = 2
)

// Identifiers from group ofp_flow_wildcards
//go:generate stringer -type=ofp_flow_wildcards
type ofp_flow_wildcards uint32
const  (
  OFPFW_IN_PORT ofp_flow_wildcards = 1
  OFPFW_DL_VLAN ofp_flow_wildcards = 2
  OFPFW_DL_SRC ofp_flow_wildcards = 4
  OFPFW_NW_DST_BITS ofp_flow_wildcards = 6
  OFPFW_NW_SRC_BITS ofp_flow_wildcards = 6
  OFPFW_NW_SRC_SHIFT ofp_flow_wildcards = 8
  OFPFW_DL_DST ofp_flow_wildcards = 8
  OFPFW_NW_DST_SHIFT ofp_flow_wildcards = 14
  OFPFW_DL_TYPE ofp_flow_wildcards = 16
  OFPFW_NW_PROTO ofp_flow_wildcards = 32
  OFPFW_TP_SRC ofp_flow_wildcards = 64
  OFPFW_TP_DST ofp_flow_wildcards = 128
  OFPFW_NW_SRC_ALL ofp_flow_wildcards = 8192
  OFPFW_NW_SRC_MASK ofp_flow_wildcards = 16128
  OFPFW_NW_DST_ALL ofp_flow_wildcards = 524288
  OFPFW_NW_DST_MASK ofp_flow_wildcards = 1032192
  OFPFW_DL_VLAN_PCP ofp_flow_wildcards = 1048576
  OFPFW_NW_TOS ofp_flow_wildcards = 2097152
  OFPFW_ALL ofp_flow_wildcards = 4194303
)

// Identifiers from group ofp_hello_failed_code
//go:generate stringer -type=ofp_hello_failed_code
type ofp_hello_failed_code uint16
const  (
  OFPHFC_INCOMPATIBLE ofp_hello_failed_code = 0
  OFPHFC_EPERM ofp_hello_failed_code = 1
)

// Identifiers from group ofp_nicira_controller_role
//go:generate stringer -type=ofp_nicira_controller_role
type ofp_nicira_controller_role uint32
const  (
  NX_ROLE_OTHER ofp_nicira_controller_role = 0
  NX_ROLE_MASTER ofp_nicira_controller_role = 1
  NX_ROLE_SLAVE ofp_nicira_controller_role = 2
)

// Identifiers from group ofp_packet_in_reason
//go:generate stringer -type=ofp_packet_in_reason
type ofp_packet_in_reason uint8
const  (
  OFPR_NO_MATCH ofp_packet_in_reason = 0
  OFPR_ACTION ofp_packet_in_reason = 1
)

// Identifiers from group ofp_port
//go:generate stringer -type=ofp_port
type ofp_port uint16
const  (
  OFPP_MAX ofp_port = 0xff00
  OFPP_IN_PORT ofp_port = 0xfff8
  OFPP_TABLE ofp_port = 0xfff9
  OFPP_NORMAL ofp_port = 0xfffa
  OFPP_FLOOD ofp_port = 0xfffb
  OFPP_ALL ofp_port = 0xfffc
  OFPP_CONTROLLER ofp_port = 0xfffd
  OFPP_LOCAL ofp_port = 0xfffe
  OFPP_NONE ofp_port = 0xffff
)

// Identifiers from group ofp_port_config
//go:generate stringer -type=ofp_port_config
type ofp_port_config uint32
const  (
  OFPPC_PORT_DOWN ofp_port_config = 1
  OFPPC_NO_STP ofp_port_config = 2
  OFPPC_NO_RECV ofp_port_config = 4
  OFPPC_NO_RECV_STP ofp_port_config = 8
  OFPPC_NO_FLOOD ofp_port_config = 16
  OFPPC_NO_FWD ofp_port_config = 32
  OFPPC_NO_PACKET_IN ofp_port_config = 64
  OFPPC_BSN_MIRROR_DEST ofp_port_config = 2147483648
)

// Identifiers from group ofp_port_features
//go:generate stringer -type=ofp_port_features
type ofp_port_features uint32
const  (
  OFPPF_10MB_HD ofp_port_features = 1
  OFPPF_10MB_FD ofp_port_features = 2
  OFPPF_100MB_HD ofp_port_features = 4
  OFPPF_100MB_FD ofp_port_features = 8
  OFPPF_1GB_HD ofp_port_features = 16
  OFPPF_1GB_FD ofp_port_features = 32
  OFPPF_10GB_FD ofp_port_features = 64
  OFPPF_COPPER ofp_port_features = 128
  OFPPF_FIBER ofp_port_features = 256
  OFPPF_AUTONEG ofp_port_features = 512
  OFPPF_PAUSE ofp_port_features = 1024
  OFPPF_PAUSE_ASYM ofp_port_features = 2048
)

// Identifiers from group ofp_port_mod_failed_code
//go:generate stringer -type=ofp_port_mod_failed_code
type ofp_port_mod_failed_code uint16
const  (
  OFPPMFC_BAD_PORT ofp_port_mod_failed_code = 0
  OFPPMFC_BAD_HW_ADDR ofp_port_mod_failed_code = 1
)

// Identifiers from group ofp_port_reason
//go:generate stringer -type=ofp_port_reason
type ofp_port_reason uint8
const  (
  OFPPR_ADD ofp_port_reason = 0
  OFPPR_DELETE ofp_port_reason = 1
  OFPPR_MODIFY ofp_port_reason = 2
)

// Identifiers from group ofp_port_state
//go:generate stringer -type=ofp_port_state
type ofp_port_state uint32
const  (
  OFPPS_LINK_DOWN ofp_port_state = 1
  OFPPS_STP_LISTEN ofp_port_state = 0
  OFPPS_STP_LEARN ofp_port_state = 256
  OFPPS_STP_FORWARD ofp_port_state = 512
  OFPPS_STP_BLOCK ofp_port_state = 768
  OFPPS_STP_MASK ofp_port_state = 768
)

// Identifiers from group ofp_queue_op_failed_code
//go:generate stringer -type=ofp_queue_op_failed_code
type ofp_queue_op_failed_code uint16
const  (
  OFPQOFC_BAD_PORT ofp_queue_op_failed_code = 0
  OFPQOFC_BAD_QUEUE ofp_queue_op_failed_code = 1
  OFPQOFC_EPERM ofp_queue_op_failed_code = 2
)

// Identifiers from group ofp_queue_properties
//go:generate stringer -type=ofp_queue_properties
type ofp_queue_properties uint32
const  (
  OFPQT_NONE ofp_queue_properties = 0
  OFPQT_MIN_RATE ofp_queue_properties = 1
)

// Identifiers from group ofp_stats_reply_flags
//go:generate stringer -type=ofp_stats_reply_flags
type ofp_stats_reply_flags uint16
const  (
  OFPSF_REPLY_MORE ofp_stats_reply_flags = 1
)

// Identifiers from group ofp_stats_request_flags
type ofp_stats_request_flags uint16
const  (
)

// Identifiers from group ofp_stats_type
//go:generate stringer -type=ofp_stats_type
type ofp_stats_type uint16
const  (
  OFPST_DESC ofp_stats_type = 0
  OFPST_FLOW ofp_stats_type = 1
  OFPST_AGGREGATE ofp_stats_type = 2
  OFPST_TABLE ofp_stats_type = 3
  OFPST_PORT ofp_stats_type = 4
  OFPST_QUEUE ofp_stats_type = 5
  OFPST_EXPERIMENTER ofp_stats_type = 65535
)

// Identifiers from group ofp_type
//go:generate stringer -type=ofp_type
type ofp_type uint8
const  (
  OFPT_HELLO ofp_type = 0
  OFPT_ERROR ofp_type = 1
  OFPT_ECHO_REQUEST ofp_type = 2
  OFPT_ECHO_REPLY ofp_type = 3
  OFPT_EXPERIMENTER ofp_type = 4
  OFPT_FEATURES_REQUEST ofp_type = 5
  OFPT_FEATURES_REPLY ofp_type = 6
  OFPT_GET_CONFIG_REQUEST ofp_type = 7
  OFPT_GET_CONFIG_REPLY ofp_type = 8
  OFPT_SET_CONFIG ofp_type = 9
  OFPT_PACKET_IN ofp_type = 10
  OFPT_FLOW_REMOVED ofp_type = 11
  OFPT_PORT_STATUS ofp_type = 12
  OFPT_PACKET_OUT ofp_type = 13
  OFPT_FLOW_MOD ofp_type = 14
  OFPT_PORT_MOD ofp_type = 15
  OFPT_STATS_REQUEST ofp_type = 16
  OFPT_STATS_REPLY ofp_type = 17
  OFPT_BARRIER_REQUEST ofp_type = 18
  OFPT_BARRIER_REPLY ofp_type = 19
  OFPT_QUEUE_GET_CONFIG_REQUEST ofp_type = 20
  OFPT_QUEUE_GET_CONFIG_REPLY ofp_type = 21
)

